#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã /restart
"""

import asyncio
import os
from aiogram import Bot
from aiogram.types import Message
from handlers import cmd_restart

async def test_restart_command():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É restart"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /restart...")
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫ –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    class MockMessage:
        def __init__(self, user_id: int, is_superadmin: bool = True):
            self.from_user = MockUser(user_id)
            self.chat = MockChat()
            
        async def answer(self, text: str):
            print(f"üì§ –ë–æ—Ç –æ—Ç–≤–µ—Ç–∏–ª: {text}")
            
    class MockUser:
        def __init__(self, user_id: int):
            self.id = user_id
            
    class MockChat:
        def __init__(self):
            self.id = 123456789
            
    # –¢–µ—Å—Ç 1: –°—É–ø–µ—Ä–∞–¥–º–∏–Ω
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç —Å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–º:")
    message = MockMessage(123456789, True)
    
    # –ú–æ–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é is_superadmin
    async def mock_is_superadmin(user_id: int) -> bool:
        return True
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    import handlers
    original_is_superadmin = handlers.is_superadmin
    handlers.is_superadmin = mock_is_superadmin
    
    try:
        await cmd_restart(message)
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ (–±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã–ª –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è)")
    except SystemExit:
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /restart —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        handlers.is_superadmin = original_is_superadmin
    
    # –¢–µ—Å—Ç 2: –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç —Å –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:")
    message = MockMessage(987654321, False)
    
    async def mock_is_superadmin_false(user_id: int) -> bool:
        return False
    
    handlers.is_superadmin = mock_is_superadmin_false
    
    try:
        await cmd_restart(message)
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏–ª–∞ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        handlers.is_superadmin = original_is_superadmin

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã /restart...")
    asyncio.run(test_restart_command())
    print("‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!") 