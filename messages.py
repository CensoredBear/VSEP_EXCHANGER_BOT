# messages.py
# TODO: –í—ã–Ω–µ—Å—Ç–∏ —Å—é–¥–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∞–¥–º–∏–Ω) –∏–∑ handlers.py 

import asyncio
from aiogram import Bot
from aiogram.types import Message as TgMessage, ReplyKeyboardMarkup, InlineKeyboardMarkup
from aiogram.enums import ParseMode
from datetime import datetime, timezone
import pytz
from config import system_settings
from db import db
from logger import logger, log_system, log_user, log_func, log_db, log_warning, log_error

def get_bali_and_msk_time_list():
    """–í–µ—Ä–Ω—É—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑ 8 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–∏: 
    UTC (–¥–∞—Ç–∞+–≤—Ä–µ–º—è), UTC (—Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è), –ë–∞–ª–∏ (–¥–∞—Ç–∞+–≤—Ä–µ–º—è), –ë–∞–ª–∏ (—Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è), –ú–°–ö (–¥–∞—Ç–∞+–≤—Ä–µ–º—è), –ú–°–ö (—Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è), –ë–∞–ª–∏ (–¥–∞—Ç–∞+–≤—Ä–µ–º—è), –ú–°–ö (–¥–∞—Ç–∞+–≤—Ä–µ–º—è)
    """
    now_utc = datetime.now(timezone.utc)
    bali_tz = pytz.timezone("Asia/Makassar")
    msk_tz = pytz.timezone("Europe/Moscow")
    now_utc_long = now_utc.strftime("%d.%m.%Y %H:%M:%S")
    now_utc_short = now_utc.strftime("%H:%M")
    now_bali = now_utc.astimezone(bali_tz).strftime("%d.%m.%Y %H:%M:%S")
    now_bali_long = now_utc.astimezone(bali_tz).strftime("%d.%m.%Y %H:%M")
    now_bali_short = now_utc.astimezone(bali_tz).strftime("%H:%M")
    now_msk = now_utc.astimezone(msk_tz).strftime("%d.%m.%Y %H:%M:%S")
    now_msk_short = now_utc.astimezone(msk_tz).strftime("%H:%M")
    now_msk_long = now_utc.astimezone(msk_tz).strftime("%d.%m.%Y %H:%M")
    return [
        now_utc_long,      # 0: UTC –¥–∞—Ç–∞+–≤—Ä–µ–º—è
        now_utc_short,     # 1: UTC —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è
        now_bali,          # 2: –ë–∞–ª–∏ –¥–∞—Ç–∞+–≤—Ä–µ–º—è —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã
        now_bali_short,    # 3: –ë–∞–ª–∏ —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã
        now_msk,           # 4: –ú–°–ö –¥–∞—Ç–∞+–≤—Ä–µ–º—è—á–∞—Å—ã:–º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã
        now_msk_short,     # 5: –ú–°–ö —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã
        now_bali_long,     # 6: –ë–∞–ª–∏ –¥–∞—Ç–∞+–≤—Ä–µ–º—è —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã
        now_msk_long,      # 7: –ú–°–ö –¥–∞—Ç–∞+–≤—Ä–µ–º—è —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã
    ]

async def send_message(
    bot: Bot,
    chat_id: int | None = None,
    text: str | None = None,
    *,
    reply_to_message_id: int | None = None,
    message_thread_id: int | None = None,
    parse_mode: ParseMode = ParseMode.HTML,
    reply_markup: ReplyKeyboardMarkup | InlineKeyboardMarkup = None,
    delete_after: int | None = None,
    delay: int | None = None,
    forward_from_chat_id: int | None = None,
    forward_message_id: int | None = None,
    **kwargs
) -> TgMessage | None:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:
      - –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      - –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ delete_after —Å–µ–∫—É–Ω–¥
      - –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
      - –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ç—Ä–µ–¥
      - —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      - —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ (delay)
      - –ø–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (forward_from_chat_id, forward_message_id)
      - –ª—é–±—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã aiogram
    """
    if delay:
        await asyncio.sleep(delay)
    if forward_from_chat_id and forward_message_id:
        msg = await bot.forward_message(
            chat_id if chat_id is not None else 0,
            forward_from_chat_id if forward_from_chat_id is not None else 0,
            forward_message_id if forward_message_id is not None else 0,
            message_thread_id=message_thread_id if message_thread_id is not None else 0,
            **kwargs
        )
    else:
        msg = await bot.send_message(
            chat_id if chat_id is not None else 0,
            text or '',
            reply_to_message_id=reply_to_message_id if reply_to_message_id is not None else 0,
            message_thread_id=message_thread_id if message_thread_id is not None else 0,
            parse_mode=parse_mode,
            reply_markup=reply_markup,
            **kwargs
        )
    if delete_after:
        asyncio.create_task(_auto_delete(bot, chat_id, msg.message_id, delete_after))
    return msg

async def _auto_delete(bot: Bot, chat_id: int | None, message_id: int | None, delay: int | None):
    await asyncio.sleep(delay or 0)
    try:
        await bot.delete_message(chat_id if chat_id is not None else 0, message_id if message_id is not None else 0)
        # –õ–æ–≥–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
        print(f"[–∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–æ] id={message_id}")
    except Exception:
        pass  # –µ—Å–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤

async def edit_message(
    bot: Bot,
    chat_id: int,
    message_id: int,
    text: str,
    *,
    parse_mode: ParseMode = ParseMode.HTML,
    reply_markup: ReplyKeyboardMarkup | InlineKeyboardMarkup = None,
    **kwargs
):
    return await bot.edit_message_text(
        text,
        chat_id=chat_id,
        message_id=message_id,
        parse_mode=parse_mode,
        reply_markup=reply_markup,
        **kwargs
    )

def get_control_usage_message() -> str:
    """–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /control"""
    return (
        "‚ùå <b>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "<code>/control CRM-–Ω–æ–º–µ—Ä –Ω–æ–º–µ—Ä-–∑–∞—è–≤–∫–∏</code>\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
        "<code>/control CRM-12345 67890</code>"
    )

def get_control_confirm_message(crm_number: str) -> str:
    """–°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã control –±–µ–∑ CRM"""
    text = "‚è≥ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É, –æ–∂–∏–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...\n\n"# return (
    if crm_number == "-":
        text += "<i>–æ–±—Ä–∞—â–∞—é –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ /conrol –ø—Ä–∏–Ω—è—Ç–∞ –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ (CRM)</i>"
    return (text)


def get_control_notify_message(chat_title: str, user_nick: str, link: str, operators: list, control_count: int) -> str:
    """–°–æ–æ–±—â–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—Ä–æ—Å–µ –∫–æ–Ω—Ç—Ä–æ–ª—è"""
    operator_nicks = []
    for op in operators:
        nick = op.get('nickneim', '')
        if nick.startswith('@'):
            operator_nicks.append(nick)
        else:
            operator_nicks.append(f"@{nick}")
    operators_text = ", ".join(operator_nicks) if operator_nicks else "–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤"
    return (
        f"‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–Æ –û–ü–ï–†–ê–¢–û–†–û–í:\n"
        f"{operators_text}\n\n"
        f"<b>üì¢ üì¢ üì¢–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç—Ä–æ–ª—è</b>\n\n"
        f"–∏–∑ —á–∞—Ç–∞: {chat_title}\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_nick}\n"
        f"–í—Ä–µ–º—è: {get_bali_and_msk_time_list()[2]}\n\n"
        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞—è–≤–∫—É –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É.\n"
        f"–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: {link}\n\n"
        f"<b>–°–ï–ô–ß–ê–° –ó–ê–Ø–í–û–ö –ù–ê –ö–û–ù–¢–†–û–õ–ï: {control_count}</b>"
    )


def get_control_error_message(error_type: str) -> str:
    """–°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫–æ–Ω—Ç—Ä–æ–ª—è"""
    messages = {
        "not_found": "‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
        "update_error": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        "notify_error": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    }
    return messages.get(error_type, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def get_control_no_attachment_message() -> str:
    """–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏—è"""
    return (f'''
    üö´ –ù–ï –í–´–ü–û–õ–ù–ï–ù–û!

    ‚ö†Ô∏è–ü–†–ò–ß–ò–ù–ê: <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã</b>

–ö–æ–º–∞–Ω–¥–∞ /control –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:
‚Ä¢ –õ–∏–±–æ –≤–º–µ—Å—Ç–µ —Å –≤–ª–æ–∂–µ–Ω–∏–µ–º
‚Ä¢ –õ–∏–±–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–ª–æ–∂–µ–Ω–∏–µ–º
- –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –≤–º–µ—Å—Ç–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å—é (–Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–æ–º–µ—Ä CRM)

<blockquote>–ø—Ä–∏–º–µ—Ä—ã:
/control 1234567890
/control —á–∞—Å—Ç—å –∑–∞–∫–∞–∑–∞</blockquote>
            
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–ª–æ–∂–µ–Ω–∏–µ–º.'''
)

def get_shift_time_message():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ —Å–º–µ–Ω—ã"""
    return f"–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {system_settings.shift_start_time or ''} - {system_settings.shift_end_time or ''}"

def get_shift_start_message():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ —Å–º–µ–Ω—ã"""
    return f"–°–º–µ–Ω–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤ {system_settings.shift_start_time or ''}"

def get_shift_end_message():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∫–æ–Ω—Ü–µ —Å–º–µ–Ω—ã"""
    return f"–°–º–µ–Ω–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –≤ {system_settings.shift_end_time or ''}"

def get_night_shift_message():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–æ—á–Ω–æ–π —Å–º–µ–Ω–µ"""
    return (
        f"‚ö†Ô∏è <b>–ù–û–ß–ù–ê–Ø –°–ú–ï–ù–ê</b> üåô\n\n"
        f"–í –ø–µ—Ä–∏–æ–¥ —Å {system_settings.shift_end_time or ''} –¥–æ {system_settings.shift_start_time or ''} "
        f"–æ—Ç–≤–µ—Ç—ã –Ω–∞ –∑–∞—è–≤–∫–∏ ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ: –±–æ—Ç –Ω–µ –≤—ã–¥–∞—ë—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã, –∑–∞—è–≤–∫–∏ –Ω–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –±–∞–∑—É "
        f"–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ–ø–ª–∞—á–µ–Ω—ã."
    ) 