import asyncio
from aiogram import Bot
from aiogram.types import Message
from aiogram.filters import Command
from aiogram import Router
from config import config
from db import db

router = Router()

@router.message(Command("checkchat"))
async def check_chat_info(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    chat_id = message.chat.id
    chat_title = message.chat.title or "–õ–∏—á–Ω—ã–π —á–∞—Ç"
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await db.connect()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —á–∞—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        chat_info = await db.pool.fetchrow(
            'SELECT * FROM "VSEPExchanger"."user" WHERE id = $1',
            chat_id
        )
        
        response = f"üìã <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ:</b>\n\n"
        response += f"üÜî <b>ID —á–∞—Ç–∞:</b> <code>{chat_id}</code>\n"
        response += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_title}\n"
        
        if chat_info:
            response += f"‚úÖ <b>–ù–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</b>\n"
            response += f"üë§ <b>Nickneim:</b> {chat_info.get('nickneim', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}\n"
            response += f"üîß <b>–†–∞–Ω–≥:</b> {chat_info.get('rang', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}\n"
            response += f"üìÖ <b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</b> {chat_info.get('created_at', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')}\n"
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞
            nickneim = chat_info.get('nickneim', '')
            if nickneim:
                nickneim_upper = nickneim.upper()
                if nickneim_upper.startswith("MBT"):
                    chat_type = "MBT"
                elif nickneim_upper.startswith("LGI"):
                    chat_type = "LGI"
                elif nickneim_upper.startswith("TCT"):
                    chat_type = "TCT"
                else:
                    chat_type = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø"
            else:
                chat_type = "Nickneim –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                
            response += f"üéØ <b>–¢–∏–ø –¥–ª—è –º–µ–¥–∏–∞:</b> {chat_type}\n"
        else:
            response += f"‚ùå <b>–ù–ï –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</b>\n"
            response += f"üí° <b>–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å —Å nickneim</b>\n"
        
        await message.reply(response, parse_mode="HTML")
        
    except Exception as e:
        error_msg = f"‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:</b> {str(e)}"
        await message.reply(error_msg, parse_mode="HTML")
    finally:
        await db.close()

async def main():
    bot = Bot(token=config.BOT_TOKEN)
    dp = Router()
    dp.include_router(router)
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∞—Ç–∞...")
    print("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /checkchat –≤ –ª—é–±–æ–π —á–∞—Ç, –≥–¥–µ –µ—Å—Ç—å –±–æ—Ç")
    
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main()) 