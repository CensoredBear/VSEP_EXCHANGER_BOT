import asyncio
from aiogram import Bot
from aiogram.types import Message
from aiogram.filters import Command
from aiogram import Router
from config import config
from db import db
from datetime import datetime

router = Router()

@router.message(Command("add_chat"))
async def add_chat_to_db(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    chat_id = message.chat.id
    chat_title = message.chat.title or "–õ–∏—á–Ω—ã–π —á–∞—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–º
    user_rank = await db.get_user_rank(message.from_user.id)
    if user_rank != 'superadmin':
        await message.reply("‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!</b> –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å —á–∞—Ç—ã.", parse_mode="HTML")
        return
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await db.connect()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —á–∞—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if db.pool is None:
            await message.reply("‚ùå <b>–û—à–∏–±–∫–∞:</b> –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.", parse_mode="HTML")
            return
        pool = db.pool
        existing_chat = await pool.fetchrow(
            'SELECT * FROM "VSEPExchanger"."user" WHERE id = $1',
            chat_id
        )
        
        if existing_chat:
            response = f"‚ö†Ô∏è <b>–ß–∞—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!</b>\n\n"
            response += f"üÜî <b>ID —á–∞—Ç–∞:</b> <code>{chat_id}</code>\n"
            response += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_title}\n"
            response += f"üë§ <b>–¢–µ–∫—É—â–∏–π nickneim:</b> {existing_chat.get('nickneim', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}\n"
            response += f"üîß <b>–†–∞–Ω–≥:</b> {existing_chat.get('rang', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}\n"
            response += f"üí° <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /update_chat –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è</b>\n"
        else:
            response = f"üìã <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞:</b>\n\n"
            response += f"üÜî <b>ID —á–∞—Ç–∞:</b> <code>{chat_id}</code>\n"
            response += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_title}\n\n"
            response += f"üí° <b>–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b>\n"
            response += f"<code>/add_chat_mbt –ò–ú–Ø</code> - –¥–ª—è MBT\n"
            response += f"<code>/add_chat_lgi –ò–ú–Ø</code> - –¥–ª—è LGI\n"
            response += f"<code>/add_chat_tct –ò–ú–Ø</code> - –¥–ª—è TCT\n\n"
            response += f"<b>–ü—Ä–∏–º–µ—Ä:</b> <code>/add_chat_mbt VSEP_Admin</code>"
        
        await message.reply(response, parse_mode="HTML")
        
    except Exception as e:
        error_msg = f"‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:</b> {str(e)}"
        await message.reply(error_msg, parse_mode="HTML")
    finally:
        await db.close()

@router.message(Command("add_chat_mbt"))
async def add_chat_mbt(message: Message):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞ —Ç–∏–ø–∞ MBT"""
    await add_chat_with_type(message, "MBT")

@router.message(Command("add_chat_lgi"))
async def add_chat_lgi(message: Message):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞ —Ç–∏–ø–∞ LGI"""
    await add_chat_with_type(message, "LGI")

@router.message(Command("add_chat_tct"))
async def add_chat_tct(message: Message):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞ —Ç–∏–ø–∞ TCT"""
    await add_chat_with_type(message, "TCT")

async def add_chat_with_type(message: Message, chat_type: str):
    """–û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–∏–ø–æ–º"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–º
    user_rank = await db.get_user_rank(message.from_user.id)
    if user_rank != 'superadmin':
        await message.reply("‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!</b> –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å —á–∞—Ç—ã.", parse_mode="HTML")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —á–∞—Ç–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    command_parts = message.text.split()
    if len(command_parts) < 2:
        await message.reply(f"‚ùå <b>–û—à–∏–±–∫–∞!</b> –£–∫–∞–∂–∏—Ç–µ –∏–º—è —á–∞—Ç–∞.\n\n<b>–ü—Ä–∏–º–µ—Ä:</b> <code>/add_chat_{chat_type.lower()} VSEP_Admin</code>", parse_mode="HTML")
        return
    
    chat_name = " ".join(command_parts[1:])
    chat_id = message.chat.id
    chat_title = message.chat.title or "–õ–∏—á–Ω—ã–π —á–∞—Ç"
    nickneim = f"{chat_type}_{chat_name}"
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await db.connect()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —á–∞—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if db.pool is None:
            await message.reply("‚ùå <b>–û—à–∏–±–∫–∞:</b> –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.", parse_mode="HTML")
            return
        pool = db.pool
        existing_chat = await pool.fetchrow(
            'SELECT * FROM "VSEPExchanger"."user" WHERE id = $1',
            chat_id
        )
        
        if existing_chat:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —á–∞—Ç
            await pool.execute(
                'UPDATE "VSEPExchanger"."user" SET nickneim = $1, rang = $2, updated_at = $3 WHERE id = $4',
                nickneim, 'group', datetime.now(), chat_id
            )
            action = "–æ–±–Ω–æ–≤–ª–µ–Ω"
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —á–∞—Ç
            await pool.execute(
                'INSERT INTO "VSEPExchanger"."user" (id, nickneim, rang, created_at, updated_at) VALUES ($1, $2, $3, $4, $5)',
                chat_id, nickneim, 'group', datetime.now(), datetime.now()
            )
            action = "–¥–æ–±–∞–≤–ª–µ–Ω"
        
        response = f"‚úÖ <b>–ß–∞—Ç —É—Å–ø–µ—à–Ω–æ {action}!</b>\n\n"
        response += f"üÜî <b>ID —á–∞—Ç–∞:</b> <code>{chat_id}</code>\n"
        response += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_title}\n"
        response += f"üë§ <b>Nickneim:</b> <code>{nickneim}</code>\n"
        response += f"üéØ <b>–¢–∏–ø:</b> {chat_type}\n"
        response += f"üîß <b>–†–∞–Ω–≥:</b> group\n"
        response += f"üìÖ <b>–î–µ–π—Å—Ç–≤–∏–µ:</b> {action}\n\n"
        response += f"üí° <b>–¢–µ–ø–µ—Ä—å —á–∞—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–¥–∏–∞ –¥–ª—è {chat_type}</b>"
        
        await message.reply(response, parse_mode="HTML")
        
    except Exception as e:
        error_msg = f"‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —á–∞—Ç–∞:</b> {str(e)}"
        await message.reply(error_msg, parse_mode="HTML")
    finally:
        await db.close()

@router.message(Command("update_chat"))
async def update_chat(message: Message):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —á–∞—Ç–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–º
    user_rank = await db.get_user_rank(message.from_user.id)
    if user_rank != 'superadmin':
        await message.reply("‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!</b> –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å —á–∞—Ç—ã.", parse_mode="HTML")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    command_parts = message.text.split()
    if len(command_parts) < 3:
        await message.reply("‚ùå <b>–û—à–∏–±–∫–∞!</b> –£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –∏ –∏–º—è —á–∞—Ç–∞.\n\n<b>–ü—Ä–∏–º–µ—Ä:</b> <code>/update_chat TCT VSEP_Admin</code>", parse_mode="HTML")
        return
    
    chat_type = command_parts[1].upper()
    if chat_type not in ["MBT", "LGI", "TCT"]:
        await message.reply("‚ùå <b>–û—à–∏–±–∫–∞!</b> –¢–∏–ø —á–∞—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å MBT, LGI –∏–ª–∏ TCT.", parse_mode="HTML")
        return
    
    chat_name = " ".join(command_parts[2:])
    chat_id = message.chat.id
    nickneim = f"{chat_type}_{chat_name}"
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await db.connect()
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º —á–∞—Ç
        if db.pool is None:
            await message.reply("‚ùå <b>–û—à–∏–±–∫–∞:</b> –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.", parse_mode="HTML")
            return
        pool = db.pool
        result = await pool.execute(
            'UPDATE "VSEPExchanger"."user" SET nickneim = $1, updated_at = $2 WHERE id = $3',
            nickneim, datetime.now(), chat_id
        )
        
        if result == "UPDATE 1":
            response = f"‚úÖ <b>–ß–∞—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!</b>\n\n"
            response += f"üÜî <b>ID —á–∞—Ç–∞:</b> <code>{chat_id}</code>\n"
            response += f"üë§ <b>–ù–æ–≤—ã–π nickneim:</b> <code>{nickneim}</code>\n"
            response += f"üéØ <b>–¢–∏–ø:</b> {chat_type}\n\n"
            response += f"üí° <b>–¢–µ–ø–µ—Ä—å —á–∞—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–¥–∏–∞ –¥–ª—è {chat_type}</b>"
        else:
            response = f"‚ùå <b>–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!</b>\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>/add_chat_{chat_type.lower()} –ò–ú–Ø</code> –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è."
        
        await message.reply(response, parse_mode="HTML")
        
    except Exception as e:
        error_msg = f"‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —á–∞—Ç–∞:</b> {str(e)}"
        await message.reply(error_msg, parse_mode="HTML")
    finally:
        await db.close()

async def main():
    bot = Bot(token=config.BOT_TOKEN)
    dp = Router()
    dp.include_router(router)
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞–º–∏...")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("/add_chat - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–∞—Ç")
    print("/add_chat_mbt –ò–ú–Ø - –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç —Ç–∏–ø–∞ MBT")
    print("/add_chat_lgi –ò–ú–Ø - –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç —Ç–∏–ø–∞ LGI") 
    print("/add_chat_tct –ò–ú–Ø - –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç —Ç–∏–ø–∞ TCT")
    print("/update_chat –¢–ò–ü –ò–ú–Ø - –æ–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —á–∞—Ç")
    
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main()) 