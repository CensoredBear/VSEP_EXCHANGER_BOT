#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
"""
import asyncio
from joke_parser import get_joke, get_joke_with_source


async def test_joke():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç–∞"""
    print("üé≠ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç–∞...")
    
    try:
        # –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞
        joke = await get_joke()
        print(f"‚úÖ –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–µ–∫–¥–æ—Ç –ø–æ–ª—É—á–µ–Ω: {joke[:100]}...")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º
        joke_data = await get_joke_with_source()
        print(f"‚úÖ –ê–Ω–µ–∫–¥–æ—Ç —Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º:")
        print(f"   –ê–Ω–µ–∫–¥–æ—Ç: {joke_data['joke'][:100]}...")
        print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {joke_data['source']}")
        print(f"   –í—Ä–µ–º—è: {joke_data['timestamp']}")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(test_joke()) 